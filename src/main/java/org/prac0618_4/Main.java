package org.prac0618_4;

// 문제 : `무기 a무기 = new 칼();` 가 실행되는 세부과정을 자세히 쓰세요.

class Main {
    public static void main(String[] args) {
        // * double d = 5.5; 의 처리과정
        // 1 : 실수 5.5가 생긴다.
        // 2 : 오직 실수만 담을 수 있는 변수 d가 생성된다.
        // 3 : d는 5.5가 자신안에 들어 올 수 있는지 판단한다.(가능)
        // 4 : d변수에 실수 5.5가 들어간다.
        double d = 5.5;

        // * double dd = 5; 의 처리과정
        // 1 : 정수 5가 생긴다.
        // 2 : 오직 실수만 담을 수 있는 변수 dd가 생성된다.
        // 3 : dd는 5가 자신안에 들어 올 수 있는지 판단한다.
        // 4 : 5는 정수이기 때문에 들어 올 수 없다고 판단한다.(불가능)
        // 5 : dd가 아쉬워하는 5에게 이렇게 이야기 합니다. `니가 실수로 변환될 수 있다면 들어올 수 있다.`
        // 6 : 5는 자신의 형태를 버리고 실수화 한다. 즉 5.0으로 변신하다.(캐스팅, 또는 형변환)
        // 7 : dd로 5.0이 들어간다.
        double dd = 5;

        // * int i = 5.5; 의 처리과정
        // 1 : 실수 5.5가 생긴다.
        // 2 : 오직 정수만 담을 수 있는 변수 i가 생성된다.
        // 3 : i는 5.5가 자신에게 담길 수 있는지 체크한다.(불가능)
        // 4 : i는 아쉬워하는 5.5에게 이렇게 이야기 합니다. `니가 정수가 된다면 들어올 수 있다.`
        // 5 : 5.5는 도저히 불가능 요구를 받고 치명적인 에러를 발생시킨다.(캐스팅 불가능 으로 인한 에러)
        //int i = 5.5;

        //무기 a무기 = new 칼();
        // * 위 코드의 처리 과정
        // 1 : 무기 객체의 리모콘과 연결될 변수 a무기가 생성된다.
        // 2 : 칼 객체가 생성된다. 이 객체는 this 리모콘을 가지고 태어나, a무기에게 복사해주려 한다.
        // 3 : a무기는 칼 객체의 복사된 리모콘이 자신과 연결될 수 있는지 체크한다. (불가능)
        // 4 : a무기는 아쉬워하는 칼 객체의 리모콘에게 이렇게 이야기 합니다. '니가 무기 객체의 리모콘이라면 연결될 수 있다.'
        // 5 : 칼 객체의 리모콘은 불가능 요구를 받고 치명적인 에러를 발생시킨다.
        // 6 : 만약에 칼 객체가 무기 객체에게 상속된 상태라면?
        // 6-1 : 4번의 질문을 받았을 때, 칼 객체의 리모콘의 답변이 달라지게 된다. '내가 무기 객체의 리모콘은 아니지만 그걸 따라할 수는 있어.'
        // 6-2 : 칼 객체의 리모콘은 무기 객체의 리모콘인 것처럼 형태를 따라하여 a무기 변수에 담긴다.
    }
}

class 무기 {

}

class 칼 {

}